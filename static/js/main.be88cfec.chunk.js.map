{"version":3,"sources":["utils/BooksAPI.js","components/Book.js","components/BookList.js","components/Main.js","components/Search.js","components/NotFound.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","book","shelf","fetch","concat","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","search","query","data","books","Book","_this$props","this","props","updateShelf","defaultShelf","imageDisplay","imageLinks","thumbnail","author","authors","join","bookTitle","title","react_default","a","createElement","className","style","width","height","backgroundImage","alt","value","onChange","e","target","disabled","Component","BookList","shelfTitle","map","components_Book","key","Main","components_BookList","filter","react_router_dom","to","Search","state","searchResults","loadError","clearQuery","_this","setState","updateQuery","throttle","BooksAPI","error","catch","err","preventDefault","_this2","_this$state","onSubmit","onSearchSubmit","type","placeholder","bookState","find","b","NotFound","fontSize","textAlign","href","App","getBooksAPI","_this3","react_router","exact","path","render","components_Main","components_Search","component","ReactDOM","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.be88cfec.chunk.js","sourcesContent":["\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Book extends Component {\r\n  render() {\r\n    const { book, updateShelf, defaultShelf } = this.props\r\n    const coverMissing = 'https://dummyimage.com/128x193/000000/fff.png&text=Cover+Missing';\r\n    let imageDisplay = book.imageLinks ? book.imageLinks.thumbnail : coverMissing;\r\n    let author = book.authors ? book.authors.join(', ') : 'Author Unknown';\r\n    let bookTitle = book.title ? book.title : 'Untitled';\r\n\r\n    return (\r\n      <li className=\"list-of-books\">\r\n        <div className=\"book\">\r\n          <div className=\"book-top\">\r\n            <div className=\"book-cover\"\r\n              style={{ width: 128, height: 193, backgroundImage: `url(${imageDisplay})`}}\r\n              alt='book cover'>\r\n            </div>\r\n            <div className=\"book-shelf-changer\">\r\n              <select\r\n                value={defaultShelf}\r\n                onChange={e => updateShelf(book, e.target.value)}>\r\n                  <option value=\"move\" disabled>Move to...</option>\r\n                  <option value='currentlyReading'>Currently Reading</option>\r\n                  <option value='wantToRead'>Want to Read</option>\r\n                  <option value='read'>Read</option>\r\n                  <option value='none'>None</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"book-title\">{bookTitle}</div>\r\n          <div className=\"book-authors\">{author}</div>\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nBook.propTypes = {\r\n  book: PropTypes.object.isRequired,\r\n  updateShelf: PropTypes.func.isRequired,\r\n  defaultShelf: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Book;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Book from './Book';\r\n\r\nclass BookList extends Component {\r\n  render() {\r\n    const { books, shelfTitle, defaultShelf, updateShelf } = this.props\r\n\r\n    return (\r\n      <div className=\"bookshelf\">\r\n        <h2 className=\"bookshelf-title\">{shelfTitle}</h2>\r\n      <div className=\"bookshelf-books\">\r\n        <ol className=\"books-grid\">\r\n          {books.map(book =>\r\n            <Book\r\n              key={book.id}\r\n              book={book}\r\n              defaultShelf={defaultShelf}\r\n              updateShelf={updateShelf}\r\n            />\r\n          )}\r\n        </ol>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nBookList.propTypes = {\r\n  shelfTitle: PropTypes.string.isRequired,\r\n  defaultShelf: PropTypes.string.isRequired,\r\n  updateShelf: PropTypes.func.isRequired\r\n}\r\n\r\nexport default BookList;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport BookList from './BookList';\r\n\r\nclass Main extends Component {\r\n  render() {\r\n    const { books, updateShelf } = this.props\r\n\r\n    return (\r\n      <li className=\"list-books-shelf\">\r\n        <div className=\"list-books\">\r\n          <div className=\"list-books-title\">\r\n            <h1 className=\"myreads\">MyReads</h1>\r\n          </div>\r\n            <div className=\"list-books-content\">\r\n              <BookList\r\n                shelfTitle='Currently Reading'\r\n                books={books.filter(book => book.shelf === 'currentlyReading')}\r\n                defaultShelf='currentlyReading'\r\n                updateShelf={updateShelf}\r\n              />\r\n              <BookList\r\n                shelfTitle='Want To Read'\r\n                books={books.filter(book => book.shelf === 'wantToRead')}\r\n                defaultShelf='wantToRead'\r\n                updateShelf={updateShelf}\r\n              />\r\n              <BookList\r\n                shelfTitle='Read'\r\n                books={books.filter(book => book.shelf === 'read')}\r\n                defaultShelf='read'\r\n                updateShelf={updateShelf}\r\n              />\r\n            </div>\r\n            <Link to='/search' className=\"open-search\">\r\n              <button>Add a book</button>\r\n            </Link>\r\n          </div>\r\n        </li>\r\n    );\r\n  }\r\n}\r\n\r\nMain.propTypes = {\r\n  books: PropTypes.array.isRequired,\r\n  updateShelf: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Main;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { throttle } from 'throttle-debounce';\r\nimport PropTypes from 'prop-types';\r\nimport * as BooksAPI from '../utils/BooksAPI';\r\nimport Book from './Book';\r\n\r\nclass Search extends Component {\r\n  state = {\r\n    query: '',\r\n    searchResults: [],\r\n    loadError: false\r\n  }\r\n\r\n   onSearchSubmit(e) {\r\n    e.preventDefault();\r\n  }\r\n\r\n  clearQuery = () => {\r\n    this.setState({\r\n      query: '',\r\n      searchResults: []\r\n    });\r\n  }\r\n\r\n  updateQuery = query => {\r\n    if (query) {\r\n      this.setState({\r\n        query\r\n      });\r\n      this.searchResults(query);\r\n    } else {\r\n      this.clearQuery();\r\n    }\r\n  }\r\n\r\n  //checks for errors\r\n  //if no errors, show results\r\n  searchResults = throttle(300, query => {\r\n    if (query) {\r\n      BooksAPI.search(query)\r\n        .then(searchResults => {\r\n          if (searchResults.error) {\r\n            this.setState({\r\n              searchResults: []\r\n            });\r\n         } else {\r\n            this.setState({\r\n              searchResults\r\n            });\r\n         }}).catch(err => {\r\n          this.setState({\r\n            loadError: true\r\n          });\r\n        })\r\n      }\r\n    })\r\n\r\n  render() {\r\n    const { query, searchResults } = this.state\r\n    const { updateShelf, books } = this.props\r\n\r\n    return (\r\n      <div className=\"search-books\">\r\n        <div className=\"search-books-bar\">\r\n          <Link to='/' className=\"close-search\">Close</Link>\r\n            <div className=\"search-books-input-wrapper\">\r\n              <form onSubmit={this.onSearchSubmit}>\r\n                <input\r\n                  type=\"text\"\r\n                  value={query}\r\n                  placeholder=\"Search by title or author\"\r\n                  onChange={e => this.updateQuery(e.target.value)}\r\n                />\r\n              </form>\r\n            </div>\r\n        </div>\r\n        <div className=\"search-books-results\">\r\n          <ol className=\"books-grid\">\r\n            { query ? (\r\n              searchResults.map(book => {\r\n                let defaultShelf;\r\n                  const bookState = books.find(b => b.id === book.id);\r\n                    if (bookState) {\r\n                      defaultShelf = bookState.shelf\r\n                    } else {\r\n                      defaultShelf = 'none'\r\n                    }\r\n                  return (\r\n                    <Book\r\n                      key={book.id}\r\n                      book={book}\r\n                      defaultShelf={defaultShelf}\r\n                      updateShelf={updateShelf}\r\n                    />\r\n                  )}\r\n              )) : (query: '')\r\n            }\r\n          </ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSearch.propTypes = {\r\n  query: PropTypes.string,\r\n  searchResults: PropTypes.array,\r\n  updateShelf: PropTypes.func.isRequired,\r\n  books: PropTypes.array.isRequired\r\n}\r\n\r\nexport default Search;","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n  const notFoundStyles = {\r\n    fontSize: 20,\r\n    textAlign: 'center'\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"not-found-page\"\r\n      style={ notFoundStyles }\r\n    >\r\n      <div className=\"not-found-icon\">\r\n        <i className=\"frown outline icon\"></i>\r\n      </div>\r\n      <div className=\"not-found-para\">\r\n        <p>Oops! This page was not found.</p>\r\n      </div>\r\n      <div>\r\n        <a\r\n          href=\"myreads-app/#/search\"\r\n          className=\"not-found-link\"\r\n        >Search for a book</a>\r\n      </div>\r\n      <div>\r\n        <a\r\n          href=\"myreads-app/#/\"\r\n          className=\"not-found-link\"\r\n        >Go to bookshelf</a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;","import React, { Component } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport * as BooksAPI from './utils/BooksAPI';\r\nimport Main from './components/Main';\r\nimport Search from './components/Search';\r\nimport NotFound from './components/NotFound';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    books: [],\r\n    loadError: false\r\n  }\r\n\r\n  getBooksAPI() {\r\n    BooksAPI.getAll()\r\n      .then(books => {\r\n        this.setState({\r\n          books\r\n        });\r\n    }).catch(err => {\r\n      this.setState({\r\n        loadError: true\r\n      });\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getBooksAPI();\r\n  }\r\n\r\n  updateShelf = (book, shelf) => {\r\n    BooksAPI.update(book, shelf)\r\n      .then(() => {\r\n        this.getBooksAPI();\r\n      }).catch(err => {\r\n        this.setState({\r\n          loadError: true\r\n        });\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const { books } = this.state;\r\n\r\n    return (\r\n      <Switch>\r\n        <Route exact path='/' render={() => (\r\n          <Main\r\n            books={books}\r\n            updateShelf={this.updateShelf}\r\n          />\r\n        )} />\r\n        <Route exact path='/search' render={() => (\r\n          <Search\r\n            books={books}\r\n            updateShelf={this.updateShelf}\r\n          />\r\n        )} />\r\n        <Route component={NotFound} />\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nApp.propTypes = {\r\n  book: PropTypes.object,\r\n  shelf: PropTypes.string,\r\n  books: PropTypes.array,\r\n  updateShelf: PropTypes.func\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <HashRouter>\r\n    <App />\r\n  </HashRouter>,\r\n  document.getElementById('root'))\r\n"],"sourceRoot":""}